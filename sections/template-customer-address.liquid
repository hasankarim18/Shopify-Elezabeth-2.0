<div x-data="{ modalOpen: true }" class="customer-address">
  <div class="container">

    {% comment %}  {% endcomment %}
    <div class="w-full flex border-b-2 pb-4 items-center justify-center md:justify-between  flex-col md:flex-row gap-4 md:gap-8 my-5">
      <h1 class="text-2xl text-center md:text-left font-bold text-gray-700">
        Addresses
      </h1>
      <button
        id="open_add_address"
        @click="modalOpen = ! modalOpen"
        type="button"
        class="btn btn-neutral">Create New Address</button>
      <a class="link link-primary" href="{{ routes.account_url }}">Back to account</a>
    </div>
    {% comment %} address modal {% endcomment %}
    <div
      x-cloak="display:none"
      @click.self="modalOpen = ! modalOpen"
      id="close_add_address_div"
      x-show="modalOpen"
      class=" w-full h-screen fixed left-0 top-0  bg-opacity-50 bg-gray-600  z-40">
      {% comment %} form child of bg-gray-700 {% endcomment %}
      <div class="relative z-50 max-h-[80vh] overflow-y-auto overflow-x-hidden max-w-lg mb-6  mx-auto bg-white border top-10 p-4">
        <div class="flex items-center justify-between mb-4">
          <h2 class="text-lg font-medium">
            New address
          </h2>
          <button
            id="close_add_address"
            @click.stop="modalOpen = ! modalOpen"
            class="">
            {% render 'icon-close'
              , class: 'w-8 h-8 hover:rotate-45 transition-all transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-transform   duration-100' %}
          </button>
        </div>
        {% comment %} modal form {% endcomment %}
        <style></style>
        <div class="text-xs address-form">
          {% form 'customer_address'
            , customer.new_address %}
            {% comment %} first name {% endcomment %}
            <div class="mb-4  grid grid-cols-4 ">
              <label for="address_fname_{{form.id}}" class="uppercase inline-flex text-gray-700 items-center  col-span-1 text-xs font-medium mb-2">First Name</label>
              <input
                id="address_fname_{{form.id}}"
                value="{{ form.first_name }}"
                class="login_input p-2 w-full col-span-3 "
                type="text"
                name="address[first_name]">
            </div>
            {% comment %} last name {% endcomment %}
            <div class="mb-4 grid grid-cols-4 items-center">
              <label for="address_lname_{{form.id}}" class="uppercase col-span-1 text-xs items-center text-gray-700 font-medium mb-2">Last Name</label>
              <input
                id="address_lname_{{form.id}}"
                value="{{ form.last_name }}"
                class="login_input w-full p-2 col-span-3"
                type="text"
                name="address[last_name]">
            </div>
            {% comment %} company {% endcomment %}
            <div class="mb-4 grid grid-cols-4 items-center flex-center">
              <label for="address_company_{{form.id}}" class=" text-xs items-center col-span-1 uppercase text-gray-700 font-medium mb-2">Company</label>
              <input
                id="address_company_{{form.id}}"
                value="{{ form.compan }}"
                class="login_input w-full p-2 col-span-3"
                type="text"
                name="address[company]">
            </div>
            {% comment %} address 1 {% endcomment %}
            <div class="mb-4 flex-center grid grid-cols-4 items-center">
              <label for="address_address1_{{form.id}}" class="uppercase items-center text-xs col-span-1 text-gray-700 font-medium mb-2">Address 1</label>
              <textarea
                id="address_address1_{{form.id}}"
                value="{{ form.address1 }}"
                class="login_input w-full col-span-3"
                type="text"
                name="address[address1]"></textarea>
            </div>
            {% comment %} address 2 {% endcomment %}
            <div class="mb-4 grid grid-cols-4 items-center flex-center">
              <label for="address_address2_{{form.id}}" class="uppercase text-gray-700 font-medium mb-2">Address 2</label>
              <textarea
                id="address_address2_{{form.id}}"
                value="{{ form.address2 }}"
                class="login_input w-full col-span-3"
                type="text"
                name="address[address2]"></textarea>
            </div>
            {% comment %} city {% endcomment %}
            <div class="mb-4 grid grid-cols-4 items-center flex-center">
              <label for="city_{{form.id}}" class="uppercase text-gray-700 font-medium mb-2">City</label>
              <input
                id="address_city_{{form.id}}"
                value="{{ form.city }}"
                class="login_input w-full col-span-3"
                type="text"
                name="address[city]" />
            </div>
            {% comment %} country {% endcomment %}
            <div class="mb-4 grid grid-cols-4 items-center flex-center">
              <label for="address_country_{{form.id}}" class="uppercase text-gray-700 font-medium mb-2">Country</label>
              <select
                data-country-selector
                data-id="{{ form.id }}"
                value="{{ form.country }}"
                class="border-2 w-full border-gray-200 p-4"
                name="address[country]"
                id="address_country_{{form.id}}">
                {{ all_country_option_tags }}
              </select>
            </div>
            {% comment %} province {% endcomment %}
            <div class="mb-4 grid grid-cols-4 items-center flex-center">
              <label for="address_province_{{form.id}}" class="uppercase text-gray-700 font-medium mb-2">Province</label>
              <select
                value="{{ form.province }}"
                class="border-2 w-full border-gray-200 p-4"
                name="address[province]"
                id="address_province_{{form.id}}"></select>
            </div>
            {% comment %} zip/postal code {% endcomment %}
            <div class="mb-4 grid grid-cols-4 items-center flex-center">
              <label for="city_{{form.id}}" class="uppercase text-gray-700 font-medium mb-2">Zip / Postal code</label>
              <input
                id="address_city_{{form.id}}"
                value="{{ form.zip }}"
                class="login_input w-full col-span-3"
                type="text"
                name="address[zip]" />
            </div>
            {% comment %} Phone number {% endcomment %}
            <div class="mb-4 grid grid-cols-4 items-center flex-center">
              <label for="city_{{form.id}}" class="uppercase text-gray-700 font-medium mb-2">Phone Number</label>
              <input
                id="address_city_{{form.id}}"
                value="{{ form.zip }}"
                class="login_input w-full col-span-3"
                type="tel"
                name="address[address[phone]]" />
            </div>
            <div class="my-4 flex gap-8 px-4 justify-center">
              <button type="reset" class="btn btn-outline btn-warning w-1/2  uppercase hover:btn-error">Cancel</button>
              <button type="submit" class="btn btn-outline w-1/2 uppercase  hover:btn-success">Create</button>

            </div>
          {% endform %}
        </div>
      </div>
    </div>
    <div class="my-3">
      {% paginate customer.addresses by 12 %}
        <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-8 lg:gap-12">
          {% for address in customer.addresses %}
            <li class="p-2 md:p-4 lg:p-6 border-2 rounded-sm">
              <div class="relative flex flex-col items-center justify-center text-center">
                {% if address == customer.default_address %}
                  <span class="badge badge-success">Default</span>
                {% endif %}
                <div class="y-8 h-full">
                  {{ address | format_address }}
                </div>
                <div class="flex gap-2 my-4">
                  <button class="btn btn-sm btn-neutral">Edit</button>
                  <button class="btn btn-sm btn-outline">Delete</button>
                </div>
              </div>
            </li>
          {% endfor %}
        </ul>
        {% render 'pagination'
          , paginate: paginate %}
      {% endpaginate %}
    </div>
  </div>
</div>

<style></style>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        const open_add_address = document.getElementById('open_add_address')
        const close_add_address = document.getElementById('close_add_address')
        const close_add_address_div = document.getElementById('close_add_address_div')
        const body = document.getElementsByTagName('body')[0]
  
        open_add_address.addEventListener('click', () => {
          
            body.classList.add('custom-overflow-hidden')
            
        })
  
        close_add_address.addEventListener('click',() => {
            event.stopPropagation()
            body.classList.remove('custom-overflow-hidden')
        })
        close_add_address_div.addEventListener('click',() => {
            event.stopPropagation()
            body.classList.remove('custom-overflow-hidden')
        })  
  
        // province class 
  
      class CustomeAddres { 
          constructor(){
            this.initCustomerAddress()
            this.customerAddressesSelector()
          }
  
          initCustomerAddress(){
            const allAdderssesSelector = document.querySelectorAll('select[data-country-selector]')
             if(allAdderssesSelector.length < 1) return ;
            //  console.log(allAdderssesSelector)
            allAdderssesSelector.forEach( select => {            
              var selectedCountry = this.getSelectedCountry(select)
              if (!selectedCountry) return
  
              var provinces = selectedCountry.dataset.provinces
              var arayOfProvince = JSON.parse(provinces)
              
              var provinceSelector = querySelector(`#address_province_${select.dataset.id}`)
              // console.log(provinceSelector)
              if(arayOfProvince.length < 1){
                provinceSelector.setAttribute('disabled', 'disabled')
              }else {
              provinceSelector.removeAttribute('disabled')
              }
              
              provinceSelector.innerHTML = ''
              let options = ''
              for (let index = 0; index < arayOfProvince.length ; index++) {
              
              if(arayOfProvince[index][0] == provinceSelector.getAttribute('value')){
                  options += `<option value="${arayOfProvince[index][0]}" selected > ${arayOfProvince[index][0]} </option>`
              }else{
                  options += `<option value="${arayOfProvince[index][0]}"  > ${arayOfProvince[index][0]} </option>`
              }            
              }              
              provinceSelector.innerHTML = options  
            });// foreach end          
  
          }// initCustomerAddress ends
  
          getSelectedCountry(select){
             let option, selectedOption;
              for (let index = 0; index < select.options.length; index++) {
                option = select.options[index]
               // console.log(option.value)
             //  console.log(option)
               const selectbyvalue = select.getAttribute('value')
             //   console.log(selectbyvalue)
              if (option.value == select.getAttribute('value') ) {
            //    console.log(option);
                selectedOption = option;
                selectedOption.setAttribute('selected', 'selected')
                break;
              }                              
              }
              return selectedOption;
          } // get selected country ene
  
  
          customerAddressesSelector() {
            const addressesSelector = document.querySelectorAll(
              "select[data-country-selector]"
            );
            if (addressesSelector.length < 1) return;
            addressesSelector.forEach((select) => {
              select.addEventListener("change", function (e) {
                var provinces = this.options[this.selectedIndex].dataset.provinces;
                var arrayOfProvince = JSON.parse(provinces);
                var provinceSelector = document.querySelector(
                  `#address_province_${this.dataset.id}`
                );
                if (arrayOfProvince.length < 1) {
                  provinceSelector.setAttribute("disabled", "disabled");
                } else {
                  provinceSelector.removeAttribute("disabled");
                }
                provinceSelector.innerHTML = "";
                var options = "";
                for (var index = 0; index < arrayOfProvince.length; index++) {
                  options += `<option value="${arrayOfProvince[index][0]}">${arrayOfProvince[index][0]}</option>`;
                }
                provinceSelector.innerHTML = options;
              });
            });
  }
  
      }// custom address class
      // creating class instances
      const customerAddress = new CustomeAddres()
  
    })
</script>